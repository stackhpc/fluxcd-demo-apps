---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jupyterhub-config
  namespace: jupyterhub
data:
  values.yaml: |

    # Add JupyterHub customisations here
    # See https://artifacthub.io/packages/helm/jupyterhub/jupyterhub

    # We don't need a load balancer for the proxy
    # since we want to use ingress instead.
    #
    # To access manually try:
    # kubectl port-forward -n jupyterhub svc/proxy-public 8080:80
    proxy:
      service:
        type: ClusterIP

    # Make JupyterHub accessible via ingress
    ingress:
      enabled: false
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        # IP must match NGINX ingress controller's
        # load balancer IP.
        # See `kubectl get svc -n ingress-nginx`
        - &host jh.dawntest.128-232-224-75.nip.io
      pathSuffix: ""
      tls:
        - hosts:
          - *host
          secretName: jupyterhub-ingress-cert

    hub:
      allowNamedServers: true
      namedServerLimitPerUser: 3
      activeServerLimit: 5
      # Server startup fails with default
      # restrictive network policy.
      networkPolicy:
         enabled: false

      # # Configure Keycloak auth
      # config:
      #   JupyterHub:
      #     authenticator_class: generic-oauth
      #   GenericOAuthenticator:
      #     client_id: scott-jupyterhub-test
      #     # client_secret: <stored-in-sealed-secret>
      #     # Must match ingress host
      #     oauth_callback_url: https://128-232-226-29.sslip.io/hub/oauth_callback
      #     authorize_url: https://identity.apps.hpc.cam.ac.uk/realms/az-rcp-cloud-portal-demo/protocol/openid-connect/auth
      #     token_url: https://identity.apps.hpc.cam.ac.uk/realms/az-rcp-cloud-portal-demo/protocol/openid-connect/token
      #     userdata_url: https://identity.apps.hpc.cam.ac.uk/realms/az-rcp-cloud-portal-demo/protocol/openid-connect/userinfo
      #     scope:
      #     - openid
      #     - groups
      #     username_claim: preferred_username
      #     claim_groups_key: groups
      #     userdata_params:
      #       state: state

      #     # Limit access to specific keycloak groups
      #     allowed_groups:
      #     - /admins
      #     - /platform-users

      #     # Allow hub admin access to keycloak users/groups
      #     # admin_groups:
      #     # - /admins
      #     admin_users:
      #     - scottd_stack

      #     # Label for the 'Sign in with ___' button
      #     login_service: Keycloak

    # turn this off for now
    prePuller:
      hook:
        enabled: false
      continuous:
        enabled: false

    singleuser:
      image:
        name: quay.io/jupyter/minimal-notebook
        tag: "2025-01-28"
      cloudMetadata:
        blockWithIptables: false
      profileList:
        - display_name: "Minimal environment"
          description: "To avoid too much bells and whistles: Python."
          default: true
        - display_name: "Datascience environment"
          description: "If you want the additional bells and whistles: Python, R, and Julia."
          kubespawner_override:
            image: quay.io/jupyter/datascience-notebook:2025-01-28
        - display_name: "Pytorch environment with 1 x Intel XPUs"
          description: "Pytorch Jupyter Stacks image!"
          kubespawner_override:
            #image: quay.io/jupyter/pytorch-notebook:2025-01-28
            #image: ghcr.io/stackhpc/jupyterhub-pytorch-intel-gpu:v0.0.1
            image: ghcr.io/johngarbutt/jupyterhub-intel-gpu:6421ba1
            extra_resource_limits:
              "gpu.intel.com/i915": "1"
              # "nvidia.com/hostdev": "1"
            supplemental_gids:
              - "110" # Ubuntu render group GID, requred for permission to use Intel GPU device
            # privilaged: false
            # container_security_context:
            #   allowPrivilegeEscalation: false
            #   capabilities:
            #     drop:
            #       - ALL
        - display_name: "Pytorch environment with 2 x Intel XPUs"
          description: "Pytorch Jupyter Stacks image!"
          kubespawner_override:
            image: ghcr.io/johngarbutt/jupyterhub-intel-gpu:6421ba1
            extra_resource_limits:
              "gpu.intel.com/i915": "2"
              "nvidia.com/hostdev": "2"
            supplemental_gids:
              - "110" # Ubuntu render group GID, requred for permission to use Intel GPU device
        - display_name: "Pytorch environment with 4 x Intel XPUs"
          description: "Pytorch Jupyter Stacks image!"
          kubespawner_override:
            image: ghcr.io/johngarbutt/jupyterhub-intel-gpu:6421ba1
            extra_resource_limits:
              "gpu.intel.com/i915": "4"
              "nvidia.com/hostdev": "4"
            supplemental_gids:
              - "110" # Ubuntu render group GID, requred for permission to use Intel GPU device
